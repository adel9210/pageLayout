{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shared/nav/nav.component.ts","./src/app/shared/nav/nav.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { List } from './data-interface.js';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { HttpClient } from '@angular/common/http';\n\nimport * as data from '../assets/data.json'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'page-layout';\n  public list: List;\n  public schema;\n  public components;\n  public editMode: boolean;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.list = data['default']['page-info'];\n    this.schema = this.list.schema;\n    this.components = this.list.components\n  }\n\n  addRow(type, index) {\n\n    let columns, ID;\n\n    switch (type) {\n      case '1-2':\n        columns = Array(2).fill(undefined).map(() => {\n          return { id: uuidv4(), components: [] }\n        });\n        break;\n      case '2-1':\n        columns = Array(2).fill(undefined).map(() => {\n          return { id: uuidv4(), components: [] }\n        });\n        break;\n      default:\n        columns = Array(+type).fill(undefined).map(() => {\n          return { id: uuidv4(), components: [] }\n        });\n        break;\n    }\n\n    // GENERATE ID\n    ID = uuidv4();\n\n    this.list.rows.splice(index, 0, {\n      id: ID,\n      type: type,\n      columns: columns\n    })\n\n  }\n\n  editRow(type, index) {\n    this.list.rows[index].type = type;\n  }\n\n  removeRow(id) {\n    this.list.rows = this.list.rows.filter(item => item.id != id)\n  }\n\n  addComponent(rowId, columnId, component) {\n    this.list.rows[rowId].columns[columnId].components.push(component);\n    console.log(this.list.rows)\n\n    this.http.get('aa.html').subscribe(res=>{\n      debugger\n    })\n  }\n\n  removeComponent(rowId, columnId, componentId) {\n    this.list.rows[rowId].columns[columnId].components.splice(componentId, 1);\n  }\n\n  chnageModeEdit(mode) {\n    this.editMode = mode;\n  }\n\n}\n","<!-- Nav  -->\n<app-nav (modeEdit)=\"chnageModeEdit($event)\" (addEle)=\"addRow($event, 0)\"></app-nav>\n\n<main class=\"container\" [ngClass]=\"{'edit-mode': editMode}\">\n  <div class=\"row section\" *ngFor=\"let row of list.rows; let i = index\">\n\n    <div *ngIf=\"editMode\" class=\"position-relative\">\n      <div ngbDropdown>\n        <div class=\"add-row\" ngbDropdownToggle>\n          <i class=\"fa fa-plus\" title=\"Add\"></i>\n          <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n            <ul class=\"row-type\">\n              <li *ngFor=\"let item of schema\" (click)=\"addRow(item.type, i)\" class=\"item-type\"> <i\n                  class=\"{{item.iconClass}}\"></i> {{ item.name}} </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      <div ngbDropdown>\n        <div class=\"edit-row\" ngbDropdownToggle>\n          <i class=\"fa fa-edit\" title=\"Edit\"></i>\n          <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n            <ul class=\"row-type\">\n              <li *ngFor=\"let item of schema\" (click)=\"editRow(item.type, i)\" class=\"item-type\"> <i\n                  class=\"{{item.iconClass}}\"></i> {{ item.name}} </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"remove-row\">\n        <i class=\"fa fa-trash\" (click)=\"removeRow(row.id)\"></i>\n      </div>\n    </div>\n\n    <ng-container *ngIf=\"row.type.split('-').length === 1\">\n      <div [ngClass]=\"{'col-sm-12': row.type == 1, 'col-sm-6': row.type ==2, 'col-sm-4': row.type ==3}\"\n        *ngFor=\"let column of row.columns; let columnId = index\">\n        <div ngbDropdown>\n          <div class=\"add-component--list\" ngbDropdownToggle>\n            <span class=\"add-component\"><i class=\"fa fa-plus\" title=\"Add\"></i></span>\n            <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n              <ul class=\"row-type\">\n                <li *ngFor=\"let component of components\" (click)=\"addComponent(i, columnId, component)\"\n                  class=\"item-type\"> <i class=\"{{component.icon}}\"></i> {{ component.title}} </li>\n              </ul>\n            </div>\n          </div>\n          <!-- Components -->\n          <div class=\"component\" *ngFor=\"let co of column.components; let componentId = index\">\n            <span>{{co.title}}</span>\n            <span [innerHTML]=\"co.URL\"></span>\n\n            <i *ngIf=\"editMode\" class=\"fa fa-trash nav-link\" (click)=\"removeComponent(i, columnId, componentId)\"></i>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"row.type == '1-2'\">\n      <div [ngClass]=\"{'col-sm-4':  columnId==0, 'col-sm-8': columnId==1, 'col-sm-12': columnId !== 0 && columnId !== 1}\"\n        *ngFor=\"let column of row.columns; let columnId = index\">\n        <div ngbDropdown>\n          <div class=\"add-component--list\" ngbDropdownToggle>\n            <span class=\"add-component\"><i class=\"fa fa-plus\" title=\"Add\"></i></span>\n            <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n              <ul class=\"row-type\">\n                <li *ngFor=\"let component of components\" (click)=\"addComponent(i, columnId, component)\"\n                  class=\"item-type\"> <i class=\"{{component.icon}}\"></i> {{ component.title}} </li>\n              </ul>\n            </div>\n          </div>\n          <!-- Components -->\n          <div class=\"component\" *ngFor=\"let co of column.components; let componentId = index\">\n            <span>{{co.title}}</span>\n            <i *ngIf=\"editMode\" class=\"fa fa-trash nav-link\" (click)=\"removeComponent(i, columnId, componentId)\"></i>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"row.type == '2-1'\">\n      <div [ngClass]=\"{'col-sm-8':  columnId==0, 'col-sm-4': columnId==1, 'col-sm-12': columnId !== 0 && columnId !== 1}\"\n        *ngFor=\"let column of row.columns; let columnId = index\">\n        <div ngbDropdown>\n          <div class=\"add-component--list\" ngbDropdownToggle>\n            <span class=\"add-component\"><i class=\"fa fa-plus\" title=\"Add\"></i></span>\n            <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n              <ul class=\"row-type\">\n                <li *ngFor=\"let component of components\" (click)=\"addComponent(i, columnId, component)\"\n                  class=\"item-type\"> <i class=\"{{component.icon}}\"></i> {{ component.title}} </li>\n              </ul>\n            </div>\n          </div>\n          <!-- Components -->\n          <div class=\"component\" *ngFor=\"let co of column.components; let componentId = index\">\n            <span>{{co.title}}</span>\n            <i *ngIf=\"editMode\" class=\"fa fa-trash nav-link\" (click)=\"removeComponent(i, columnId, componentId)\"></i>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n\n  </div>\n</main>\n\n<!-- بالنسبة لطرق الاشتراك فى اكتر من طريقة زى 111 وفروعنا ومكاتب خدماتى واون لاين و السنترالات والاوراق المطلوبة للخطوط\nالمنزلية صورة بطاقة صاحب خط التليفون واخر فاتورة تليفون مدفوعة وبالنسبة للاوراق ممكن حضرتك تبعتها على الايميل\nCustomer.Care@te.eg او الفاكس 02- 33320800او حضرتك تسلمها فى الفرع الاوراق المطلوبة للتعاقد صورة من تحقيق الشخصية لصاحب\nالخط ( فى حالة التليفون ورثة مطلوب صورة بطاقة وريث مباشر ) بالنسبة للعملاء الاجانب يتطلب ( صورة من بطاقة صاحب الخط وصورة\nمن جواز السفر وصورة من عقد الايجار ) فى حالة أن حضرتك مستأجر ( صورة من عقد الإيجار و صورة من البطاقة الشخصية للمتعاقد )\n- صورة من أخر فاتورة تليفون مستحقة وتكون مسددة (فى حالة ان خط التليفون جديد ، احضار صورة من العقد) - مبلغ الاشتراك مقدم.\nفي حاله ان حضرتك هيشترك عن طريق الفرع لازم تكون البطاقه ساريه -->","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgbModule, NgbDropdown } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './shared/nav/nav.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent\n  ],\n  imports: [\n    BrowserModule,\n    NgbModule,\n    HttpClientModule\n  ],\n  providers: [NgbDropdown],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n  @Input() editMode: boolean;\n  @Output() modeEdit: EventEmitter<any> = new EventEmitter();\n  @Output() addEle: EventEmitter<any> = new EventEmitter();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  changeEditMode() {\n    this.editMode = !this.editMode;\n\n    this.modeEdit.emit(this.editMode)\n  }\n\n  addRow() {\n    this.editMode = true;\n\n    this.modeEdit.emit(this.editMode)\n\n    this.addEle.emit('3')\n  }\n\n}\n","<header class=\"header\">\n    <div class=\"container\">\n      <nav>\n        <ul class=\"nav-items\">\n          <div ngbDropdown class=\"d-inline-block\">\n            <button class=\"nav-link\" id=\"dropdownBasic1\" ngbDropdownToggle><i class=\"fa fa-plus\"></i> Add</button>\n            <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n              <button (click)=\"addRow()\" ngbDropdownItem>Row</button>\n            </div>\n          </div>\n  \n          <li *ngIf=\"editMode\" (click)=\"changeEditMode()\" class=\"nav-item\"><a class=\"nav-link\"><i class=\"fa fa-save\"></i> Save as draft</a></li>\n          <li *ngIf=\"!editMode\" (click)=\"changeEditMode()\"  class=\"nav-item nav-item--edit\"><a class=\"nav-link\"><i class=\"fa fa-edit\"></i>  Edit</a></li>\n        </ul>\n      </nav>\n    </div>\n  </header>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}