{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/shared/nav/nav.component.ts","webpack:///src/app/shared/nav/nav.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","http","title","list","schema","components","type","index","columns","ID","Array","fill","undefined","map","rows","splice","filter","item","rowId","columnId","component","push","console","log","get","subscribe","res","componentId","mode","editMode","chnageModeEdit","addRow","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","NavComponent","modeEdit","addEle","emit","environment","production","bootstrapModule","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { List } from './data-interface.js';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { HttpClient } from '@angular/common/http';\n\nimport * as data from '../assets/data.json'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'page-layout';\n  public list: List;\n  public schema;\n  public components;\n  public editMode: boolean;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.list = data['default']['page-info'];\n    this.schema = this.list.schema;\n    this.components = this.list.components\n  }\n\n  addRow(type, index) {\n\n    let columns, ID;\n\n    switch (type) {\n      case '1-2':\n        columns = Array(2).fill(undefined).map(() => {\n          return { id: uuidv4(), components: [] }\n        });\n        break;\n      case '2-1':\n        columns = Array(2).fill(undefined).map(() => {\n          return { id: uuidv4(), components: [] }\n        });\n        break;\n      default:\n        columns = Array(+type).fill(undefined).map(() => {\n          return { id: uuidv4(), components: [] }\n        });\n        break;\n    }\n\n    // GENERATE ID\n    ID = uuidv4();\n\n    this.list.rows.splice(index, 0, {\n      id: ID,\n      type: type,\n      columns: columns\n    })\n\n  }\n\n  editRow(type, index) {\n    this.list.rows[index].type = type;\n  }\n\n  removeRow(id) {\n    this.list.rows = this.list.rows.filter(item => item.id != id)\n  }\n\n  addComponent(rowId, columnId, component) {\n    this.list.rows[rowId].columns[columnId].components.push(component);\n    console.log(this.list.rows)\n\n    this.http.get('aa.html').subscribe(res=>{\n      debugger\n    })\n  }\n\n  removeComponent(rowId, columnId, componentId) {\n    this.list.rows[rowId].columns[columnId].components.splice(componentId, 1);\n  }\n\n  chnageModeEdit(mode) {\n    this.editMode = mode;\n  }\n\n}\n","<!-- Nav  -->\n<app-nav (modeEdit)=\"chnageModeEdit($event)\" (addEle)=\"addRow($event, 0)\"></app-nav>\n\n<main class=\"container\" [ngClass]=\"{'edit-mode': editMode}\">\n  <div class=\"row section\" *ngFor=\"let row of list.rows; let i = index\">\n\n    <div *ngIf=\"editMode\" class=\"position-relative\">\n      <div ngbDropdown>\n        <div class=\"add-row\" ngbDropdownToggle>\n          <i class=\"fa fa-plus\" title=\"Add\"></i>\n          <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n            <ul class=\"row-type\">\n              <li *ngFor=\"let item of schema\" (click)=\"addRow(item.type, i)\" class=\"item-type\"> <i\n                  class=\"{{item.iconClass}}\"></i> {{ item.name}} </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      <div ngbDropdown>\n        <div class=\"edit-row\" ngbDropdownToggle>\n          <i class=\"fa fa-edit\" title=\"Edit\"></i>\n          <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n            <ul class=\"row-type\">\n              <li *ngFor=\"let item of schema\" (click)=\"editRow(item.type, i)\" class=\"item-type\"> <i\n                  class=\"{{item.iconClass}}\"></i> {{ item.name}} </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"remove-row\">\n        <i class=\"fa fa-trash\" (click)=\"removeRow(row.id)\"></i>\n      </div>\n    </div>\n\n    <ng-container *ngIf=\"row.type.split('-').length === 1\">\n      <div [ngClass]=\"{'col-sm-12': row.type == 1, 'col-sm-6': row.type ==2, 'col-sm-4': row.type ==3}\"\n        *ngFor=\"let column of row.columns; let columnId = index\">\n        <div ngbDropdown>\n          <div class=\"add-component--list\" ngbDropdownToggle>\n            <span class=\"add-component\"><i class=\"fa fa-plus\" title=\"Add\"></i></span>\n            <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n              <ul class=\"row-type\">\n                <li *ngFor=\"let component of components\" (click)=\"addComponent(i, columnId, component)\"\n                  class=\"item-type\"> <i class=\"{{component.icon}}\"></i> {{ component.title}} </li>\n              </ul>\n            </div>\n          </div>\n          <!-- Components -->\n          <div class=\"component\" *ngFor=\"let co of column.components; let componentId = index\">\n            <span>{{co.title}}</span>\n            <span [innerHTML]=\"co.URL\"></span>\n\n            <i *ngIf=\"editMode\" class=\"fa fa-trash nav-link\" (click)=\"removeComponent(i, columnId, componentId)\"></i>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"row.type == '1-2'\">\n      <div [ngClass]=\"{'col-sm-4':  columnId==0, 'col-sm-8': columnId==1, 'col-sm-12': columnId !== 0 && columnId !== 1}\"\n        *ngFor=\"let column of row.columns; let columnId = index\">\n        <div ngbDropdown>\n          <div class=\"add-component--list\" ngbDropdownToggle>\n            <span class=\"add-component\"><i class=\"fa fa-plus\" title=\"Add\"></i></span>\n            <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n              <ul class=\"row-type\">\n                <li *ngFor=\"let component of components\" (click)=\"addComponent(i, columnId, component)\"\n                  class=\"item-type\"> <i class=\"{{component.icon}}\"></i> {{ component.title}} </li>\n              </ul>\n            </div>\n          </div>\n          <!-- Components -->\n          <div class=\"component\" *ngFor=\"let co of column.components; let componentId = index\">\n            <span>{{co.title}}</span>\n            <i *ngIf=\"editMode\" class=\"fa fa-trash nav-link\" (click)=\"removeComponent(i, columnId, componentId)\"></i>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"row.type == '2-1'\">\n      <div [ngClass]=\"{'col-sm-8':  columnId==0, 'col-sm-4': columnId==1, 'col-sm-12': columnId !== 0 && columnId !== 1}\"\n        *ngFor=\"let column of row.columns; let columnId = index\">\n        <div ngbDropdown>\n          <div class=\"add-component--list\" ngbDropdownToggle>\n            <span class=\"add-component\"><i class=\"fa fa-plus\" title=\"Add\"></i></span>\n            <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n              <ul class=\"row-type\">\n                <li *ngFor=\"let component of components\" (click)=\"addComponent(i, columnId, component)\"\n                  class=\"item-type\"> <i class=\"{{component.icon}}\"></i> {{ component.title}} </li>\n              </ul>\n            </div>\n          </div>\n          <!-- Components -->\n          <div class=\"component\" *ngFor=\"let co of column.components; let componentId = index\">\n            <span>{{co.title}}</span>\n            <i *ngIf=\"editMode\" class=\"fa fa-trash nav-link\" (click)=\"removeComponent(i, columnId, componentId)\"></i>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n\n  </div>\n</main>\n\n<!-- بالنسبة لطرق الاشتراك فى اكتر من طريقة زى 111 وفروعنا ومكاتب خدماتى واون لاين و السنترالات والاوراق المطلوبة للخطوط\nالمنزلية صورة بطاقة صاحب خط التليفون واخر فاتورة تليفون مدفوعة وبالنسبة للاوراق ممكن حضرتك تبعتها على الايميل\nCustomer.Care@te.eg او الفاكس 02- 33320800او حضرتك تسلمها فى الفرع الاوراق المطلوبة للتعاقد صورة من تحقيق الشخصية لصاحب\nالخط ( فى حالة التليفون ورثة مطلوب صورة بطاقة وريث مباشر ) بالنسبة للعملاء الاجانب يتطلب ( صورة من بطاقة صاحب الخط وصورة\nمن جواز السفر وصورة من عقد الايجار ) فى حالة أن حضرتك مستأجر ( صورة من عقد الإيجار و صورة من البطاقة الشخصية للمتعاقد )\n- صورة من أخر فاتورة تليفون مستحقة وتكون مسددة (فى حالة ان خط التليفون جديد ، احضار صورة من العقد) - مبلغ الاشتراك مقدم.\nفي حاله ان حضرتك هيشترك عن طريق الفرع لازم تكون البطاقه ساريه -->","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgbModule, NgbDropdown } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './shared/nav/nav.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent\n  ],\n  imports: [\n    BrowserModule,\n    NgbModule,\n    HttpClientModule\n  ],\n  providers: [NgbDropdown],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n  @Input() editMode: boolean;\n  @Output() modeEdit: EventEmitter<any> = new EventEmitter();\n  @Output() addEle: EventEmitter<any> = new EventEmitter();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  changeEditMode() {\n    this.editMode = !this.editMode;\n\n    this.modeEdit.emit(this.editMode)\n  }\n\n  addRow() {\n    this.editMode = true;\n\n    this.modeEdit.emit(this.editMode)\n\n    this.addEle.emit('3')\n  }\n\n}\n","<header class=\"header\">\n    <div class=\"container\">\n      <nav>\n        <ul class=\"nav-items\">\n          <div ngbDropdown class=\"d-inline-block\">\n            <button class=\"nav-link\" id=\"dropdownBasic1\" ngbDropdownToggle><i class=\"fa fa-plus\"></i> Add</button>\n            <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\n              <button (click)=\"addRow()\" ngbDropdownItem>Row</button>\n            </div>\n          </div>\n  \n          <li *ngIf=\"editMode\" (click)=\"changeEditMode()\" class=\"nav-item\"><a class=\"nav-link\"><i class=\"fa fa-save\"></i> Save as draft</a></li>\n          <li *ngIf=\"!editMode\" (click)=\"changeEditMode()\"  class=\"nav-item nav-item--edit\"><a class=\"nav-link\"><i class=\"fa fa-edit\"></i>  Edit</a></li>\n        </ul>\n      </nav>\n    </div>\n  </header>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}